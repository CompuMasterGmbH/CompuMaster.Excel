name: Publish/Upload dotnet package on release

# PLEASE NOTE: PUBLISHING/DEPLOYMENT
# Release is to be created manually at GitHub releases management page
# - release name usually contains "v1.2.3"
# After creating a GitHub release, following actions will automatically run:
# 1. NuGet package (version as defined in VS.Net project property "package version")
# 2. Attaching of compiled binaries to GitHub release

on:
  release:
    types: [created]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Name of project configuration for build as well as name of the bin output subdirectory (both must match for "dotnet pack" to find compiled files!)
  BUILD_CONFIGURATION: CI_CD
  BUILD_OUTPUT_SUBDIR: Debug
  PACK_CONFIGURATION: Debug
  # Name of build project which creates required output for packaging/deployment
  BUILD_PROJECT_01: MsExcelComInterop/CompuMaster.MsExcelComInterop.vbproj
  BUILD_PROJECT_02: Epplus-FixCalcsEdition/Epplus/EPPlus45-FixCalcsEdition.MultiTarget.csproj
  BUILD_PROJECT_03: ExcelOps/ExcelOps.vbproj
  BUILD_PROJECT_04: ExcelOps-EpplusFreeFixCalcsEdition/ExcelOps-EpplusFreeFixCalcsEdition.vbproj
  BUILD_PROJECT_05: ExcelOps-EpplusPolyform/ExcelOps-EpplusPolyformEdition.vbproj
  BUILD_PROJECT_06: ExcelOps-MicrosoftExcel/ExcelOps-MicrosoftExcel.vbproj
  BUILD_PROJECT_07: ExcelOps-FreeSpireXls/ExcelOps-FreeSpireXls.vbproj
  BUILD_PROJECT_08: ExcelOps-Tools-MsAndEpplusFreeFixCalcsEdition/ExcelOps-Tools-MsAndEpplusFreeFixCalcsEdition.vbproj
  BUILD_PROJECT_09: CM.Data.EpplusFixCalcsEdition/CM.Data.EpplusFreeFixCalcsEdition.vbproj
  BUILD_PROJECT_10: CM.Data.EpplusPolyformEdition/CM.Data.EpplusPolyformEdition.vbproj
  # Name of directory (e.g. "bin") containing the subdirectory (e.g. "CI_CD") with all output files (*.dll)
  BUILD_OUTPUT_BASEDIR_01: MsExcelComInterop/bin
  BUILD_OUTPUT_BASEDIR_02: Epplus-FixCalcsEdition/Epplus/bin
  BUILD_OUTPUT_BASEDIR_03: ExcelOps/bin
  BUILD_OUTPUT_BASEDIR_04: ExcelOps-EpplusFreeFixCalcsEdition/bin
  BUILD_OUTPUT_BASEDIR_05: ExcelOps-EpplusPolyform/bin
  BUILD_OUTPUT_BASEDIR_06: ExcelOps-MicrosoftExcel/bin
  BUILD_OUTPUT_BASEDIR_07: ExcelOps-FreeSpireXls/bin
  BUILD_OUTPUT_BASEDIR_08: ExcelOps-Tools-MsAndEpplusFreeFixCalcsEdition/bin
  BUILD_OUTPUT_BASEDIR_09: CM.Data.EpplusFixCalcsEdition/bin
  BUILD_OUTPUT_BASEDIR_10: CM.Data.EpplusPolyformEdition/bin
  # Name of project
  PROJECT_NAME_01: CM.MsExcelComInterop
  PROJECT_NAME_02: CM.Epplus4-FixCalcsEdition
  PROJECT_NAME_03: ExcelOps
  PROJECT_NAME_04: ExcelOps-EpplusFreeFixCalcsEdition
  PROJECT_NAME_05: ExcelOps-EpplusPolyform
  PROJECT_NAME_06: ExcelOps-MicrosoftExcel
  PROJECT_NAME_07: ExcelOps-FreeSpireXls
  PROJECT_NAME_08: ExcelOps-Tools-MsAndEpplusFreeFixCalcsEdition
  PROJECT_NAME_09: CM.Data.EpplusFixCalcsEdition
  PROJECT_NAME_10: CM.Data.EpplusPolyformEdition
  # BinariesZipName of project artifacts
  ARTIFACTS_BIN_ZIP_01: bin-CM.MsExcelComInterop.zip
  ARTIFACTS_BIN_ZIP_02: bin-CM.Epplus4.zip
  ARTIFACTS_BIN_ZIP_03: bin-CM.Excel.ExcelOps.zip
  ARTIFACTS_BIN_ZIP_04: bin-CM.Excel.ExcelOps-EpplusFreeFixCalcsEdition.zip
  ARTIFACTS_BIN_ZIP_05: bin-CM.Excel.ExcelOps-EpplusPolyform.zip
  ARTIFACTS_BIN_ZIP_06: bin-CM.Excel.ExcelOps-MicrosoftExcel.zip
  ARTIFACTS_BIN_ZIP_07: bin-CM.Excel.ExcelOps-FreeSpireXls.zip
  ARTIFACTS_BIN_ZIP_08: bin-CM.Excel.ExcelOps-Tools-MsAndEpplusFreeFixCalcsEdition.zip
  ARTIFACTS_BIN_ZIP_09: bin-CM.Data.EpplusFixCalcsEdition.zip
  ARTIFACTS_BIN_ZIP_10: bin-CM.Data.EpplusPolyformEdition.zip


jobs:
    publish:
        runs-on: windows-latest
        #if: false # always skip job

        env:
          VersionPrefix: ${{  github.ref_name }}

        steps:
            - name: GitHub Tag for assembly versioning
              run: |
                #echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
                echo "Tag name from github.ref_name: ${{  github.ref_name }}"
                echo "Tag name from environment: ${{  env.VersionPrefix }}"

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                dotnet-version: 7.0.x

            - name: Install dependencies
              run: dotnet restore /p:Configuration=${{env.BUILD_CONFIGURATION}}

            - name: Build
              run: dotnet build --configuration=${{env.BUILD_CONFIGURATION}} --no-restore 

            - name: Zip binaries ${{env.PROJECT_NAME_01}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_01}} ${{env.BUILD_OUTPUT_BASEDIR_01}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_02}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_02}} ${{env.BUILD_OUTPUT_BASEDIR_02}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_03}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_03}} ${{env.BUILD_OUTPUT_BASEDIR_03}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_04}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_04}} ${{env.BUILD_OUTPUT_BASEDIR_04}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_05}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_05}} ${{env.BUILD_OUTPUT_BASEDIR_05}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_06}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_06}} ${{env.BUILD_OUTPUT_BASEDIR_06}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_07}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_07}} ${{env.BUILD_OUTPUT_BASEDIR_07}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_08}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_08}} ${{env.BUILD_OUTPUT_BASEDIR_08}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_09}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_09}} ${{env.BUILD_OUTPUT_BASEDIR_09}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Zip binaries ${{env.PROJECT_NAME_10}}
              run: Compress-Archive -DestinationPath ${{env.ARTIFACTS_BIN_ZIP_10}} ${{env.BUILD_OUTPUT_BASEDIR_10}}/${{env.BUILD_OUTPUT_SUBDIR}}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_01}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_01}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_02}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_02}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_03}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_03}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_04}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_04}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_05}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_05}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_06}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_06}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_07}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_07}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_08}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_08}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_09}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_09}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish zipped binaries ${{env.PROJECT_NAME_10}}
              uses: softprops/action-gh-release@v1
              with:
                files: ${{env.ARTIFACTS_BIN_ZIP_10}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Pack ${{env.PROJECT_NAME_01}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_01}} --output .  

            - name: Pack ${{env.PROJECT_NAME_02}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_02}} --output .  

            - name: Pack ${{env.PROJECT_NAME_03}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_03}} --output .  

            - name: Pack ${{env.PROJECT_NAME_04}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_04}} --output .  

            - name: Pack ${{env.PROJECT_NAME_05}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_05}} --output .  

            - name: Pack ${{env.PROJECT_NAME_06}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_06}} --output .  

            - name: Pack ${{env.PROJECT_NAME_07}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_07}} --output .  

            - name: Pack ${{env.PROJECT_NAME_08}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_08}} --output .  

            - name: Pack ${{env.PROJECT_NAME_09}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_09}} --output .  

            - name: Pack ${{env.PROJECT_NAME_10}}
              run: dotnet pack --no-build --configuration=${{env.PACK_CONFIGURATION}} ${{env.BUILD_PROJECT_10}} --output .  

            - name: PushNuget ${{env.PROJECT_NAME_01}} + ${{env.PROJECT_NAME_02}} + ${{env.PROJECT_NAME_03}} + ${{env.PROJECT_NAME_04}} + ${{env.PROJECT_NAME_05}} + ${{env.PROJECT_NAME_06}} + ${{env.PROJECT_NAME_07}} + ${{env.PROJECT_NAME_08}} + ${{env.PROJECT_NAME_09}} + ${{env.PROJECT_NAME_10}}
              run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate 

            - name: Publish Package Artifacts
              uses: actions/upload-artifact@v2
              with:
                name: Nupkg Artifacts
                path: ./**/*.nupkg